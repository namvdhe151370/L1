@model IEnumerable<EmployeeModel>

<h1>Employee List</h1>
<div>
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="errorMessage" class="alert alert-danger mt-3">
            <h4>Error:</h4>
            <p>@TempData["ErrorMessage"]</p>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="alert alert-success mt-3">
            <h4>Success:</h4>
            <p>@TempData["SuccessMessage"]</p>
        </div>
    }
</div>
<form asp-action="Export" method="post">
    <input type="hidden" id="selectedEmployeeIds" name="selectedEmployeeIds" />
    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
        <button type="submit" class="btn btn-success" id="exportButton">Export</button>
        
    </p>

    <table class="table text-center">
        <thead>
            <tr>
                <th><button type="button" class="btn btn-danger" id="clearSelection" style="width: 25px; height: 25px; padding: 0; text-align: center;">X</button></th>
                <th>#</th>
                <th>Employee Name</th>
                <th>Date of Birth</th>
                <th>Age</th>
                <th>Ethnic</th>
                <th>Job</th>
                <th>Citizen Number</th>
                <th>Phone Number</th>
                <th>City</th>
                <th>Certificates Count</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (item, index) in Model.Select((item, index) => (item, index)))
            {
                <tr>
                    <td><input type="checkbox" class="employee-checkbox" data-employee-id="@item.EmployeeId" /></td>
                    <td>@((ViewBag.CurrentPage - 1) * ViewBag.PageSize + index + 1)</td>
                    <td>@item.EmployeeName</td>
                    <td>@item.Dob.ToString("dd/MM/yyyy")</td>
                    <td>@item.Age</td>
                    <td>@item.Ethnic.EthnicName</td>
                    <td>@item.Job.JobName</td>
                    <td>@(item.CitizenNumber ?? "No CitizenNumber")</td>
                    <td>@(item.PhoneNumber ?? "No PhoneNumber")</td>
                    <td>@item.City.CityName</td>
                    <td>@(item.Certificates != null ? item.Certificates.Count : 0)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.EmployeeId" class="btn btn-primary mt-2">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.EmployeeId" class="btn btn-secondary mt-2">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.EmployeeId" class="btn btn-danger mt-2">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" style="margin-right: 5px">@i</a>
            </li>
        }
    </ul>
</nav>

<div class="mt-3">
    <form asp-action="ImportEmployees" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="file">Choose Excel file:</label>
            <input type="file" class="form-control-file" id="file" name="file" required>
        </div>

        <button type="submit" class="btn btn-primary mt-2">Import Employees</button>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            if ($('#errorMessage').length > 0) {
                setTimeout(function () {
                    $('#errorMessage').fadeOut();
                }, 8000);
            }
            if ($('#successMessage').length > 0) {
                setTimeout(function () {
                    $('#successMessage').fadeOut();
                }, 8000);
            }

            const selectedEmployeeIds = JSON.parse(localStorage.getItem('selectedEmployeeIds')) || [];
            function updateSelectedEmployeeIds() {
                const selectedIds = selectedEmployeeIds.join(',');
                $('#selectedEmployeeIds').val(selectedIds);
                localStorage.setItem('selectedEmployeeIds', JSON.stringify(selectedEmployeeIds));
                $('#exportButton').prop('disabled', selectedEmployeeIds.length === 0);
            }
            selectedEmployeeIds.forEach(id => {
                $(`.employee-checkbox[data-employee-id=${id}]`).prop('checked', true);
            });
            $('.employee-checkbox').change(function () {
                const employeeId = $(this).data('employee-id');
                if ($(this).is(':checked')) {
                    selectedEmployeeIds.push(employeeId);
                } else {
                    const index = selectedEmployeeIds.indexOf(employeeId);
                    if (index > -1) {
                        selectedEmployeeIds.splice(index, 1);
                    }
                }
                updateSelectedEmployeeIds();
            });

            // Clear selection and localStorage
            $('#clearSelection').click(function () {
                $('.employee-checkbox').prop('checked', false);
                selectedEmployeeIds.splice(0, selectedEmployeeIds.length); // Clear array
                updateSelectedEmployeeIds();
            });

            updateSelectedEmployeeIds();
        });
    </script>
}
